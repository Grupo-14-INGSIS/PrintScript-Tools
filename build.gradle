//aplico el plugin de jacoco

//saco all projects maven porque ya esta configurado en myPlugin-conventions

subprojects { //configura todos los proyectos de forma homogenea
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'jacoco'

    dependencies { //dependencias comunes para todos los subproyectos
        implementation "org.jetbrains.kotlin:kotlin-stdlib"
        testImplementation "org.jetbrains.kotlin:kotlin-test"
        testImplementation "org.junit.jupiter:junit-jupiter:5.9.2"
        testImplementation "io.mockk:mockk:1.13.7"
    }

    test { //configura tests
        useJUnitPlatform()
        finalizedBy jacocoTestReport // Genera reporte despu√©s de tests
    }

    jacocoTestReport {
        dependsOn test // Asegura que los tests se ejecuten primero
        reports {
            xml.required = true
            html.required = true
        }
    }

    jacocoTestCoverageVerification {
        dependsOn jacocoTestReport
        violationRules {
            rule {
                limit {
                    minimum = 0.80
                }
            }
        }
    }

    compileKotlin { //compila el codigo, usa jvm 21 habilitando nuevas caracteristicas
        kotlinOptions {
            jvmTarget = "21"
        }
    }

    compileTestKotlin { //lo mismo del anterior, pero para tests
        kotlinOptions {
            jvmTarget = "21"
        }
    }

    // Ya no necesitas esta tarea personalizada, usa directamente jacocoTestCoverageVerification
    // tasks.register("verifyCoverage") {
    //     dependsOn tasks.named("test"), tasks.named("jacocoTestReport")
    // }
}